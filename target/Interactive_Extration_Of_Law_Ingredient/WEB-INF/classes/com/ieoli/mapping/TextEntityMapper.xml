<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ieoli.dao.TextEntityMapper" >
  <resultMap id="BaseResultMap" type="com.ieoli.entity.TextEntity" >
    <id column="textID" property="textid" jdbcType="INTEGER" />
    <result column="online" property="online" jdbcType="INTEGER" />
    <result column="textName" property="textname" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ieoli.entity.TextEntity" extends="BaseResultMap" >
    <result column="article" property="article" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    textID, online, textName
  </sql>
  <sql id="Blob_Column_List" >
    article
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.ieoli.entity.TextEntityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from texts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ieoli.entity.TextEntityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from texts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from texts
    where textID = #{textid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from texts
    where textID = #{textid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ieoli.entity.TextEntityExample" >
    delete from texts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ieoli.entity.TextEntity" >
    insert into texts (textID, online, textName, 
      article)
    values (#{textid,jdbcType=INTEGER}, #{online,jdbcType=INTEGER}, #{textname,jdbcType=VARCHAR}, 
      #{article,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ieoli.entity.TextEntity" >
    insert into texts
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="textid != null" >
        textID,
      </if>
      <if test="online != null" >
        online,
      </if>
      <if test="textname != null" >
        textName,
      </if>
      <if test="article != null" >
        article,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="textid != null" >
        #{textid,jdbcType=INTEGER},
      </if>
      <if test="online != null" >
        #{online,jdbcType=INTEGER},
      </if>
      <if test="textname != null" >
        #{textname,jdbcType=VARCHAR},
      </if>
      <if test="article != null" >
        #{article,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ieoli.entity.TextEntityExample" resultType="java.lang.Integer" >
    select count(*) from texts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update texts
    <set >
      <if test="record.textid != null" >
        textID = #{record.textid,jdbcType=INTEGER},
      </if>
      <if test="record.online != null" >
        online = #{record.online,jdbcType=INTEGER},
      </if>
      <if test="record.textname != null" >
        textName = #{record.textname,jdbcType=VARCHAR},
      </if>
      <if test="record.article != null" >
        article = #{record.article,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update texts
    set textID = #{record.textid,jdbcType=INTEGER},
      online = #{record.online,jdbcType=INTEGER},
      textName = #{record.textname,jdbcType=VARCHAR},
      article = #{record.article,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update texts
    set textID = #{record.textid,jdbcType=INTEGER},
      online = #{record.online,jdbcType=INTEGER},
      textName = #{record.textname,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ieoli.entity.TextEntity" >
    update texts
    <set >
      <if test="online != null" >
        online = #{online,jdbcType=INTEGER},
      </if>
      <if test="textname != null" >
        textName = #{textname,jdbcType=VARCHAR},
      </if>
      <if test="article != null" >
        article = #{article,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where textID = #{textid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ieoli.entity.TextEntity" >
    update texts
    set online = #{online,jdbcType=INTEGER},
      textName = #{textname,jdbcType=VARCHAR},
      article = #{article,jdbcType=LONGVARCHAR}
    where textID = #{textid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ieoli.entity.TextEntity" >
    update texts
    set online = #{online,jdbcType=INTEGER},
      textName = #{textname,jdbcType=VARCHAR}
    where textID = #{textid,jdbcType=INTEGER}
  </update>
</mapper>